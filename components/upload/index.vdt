import {Button} from '../button';
import {Progress} from '../progress';
import {Dialog} from '../dialog';
import {Ellipsis} from '../ellipsis';
import {expandAnimationCallbacks, getRestProps} from '../utils';
import {makeStyles, makeUploadDialogStyles} from './styles';
import {TransitionGroup, Transition, linkEvent} from 'intact';
import {_$} from '../../i18n';
import {Icon} from '../icon';
import {UploadFileStatus} from './useUpload';

const {
    className, accept, multiple, limit,
    files, children, type, directory, disabled
} = this.get();

const drag = this.drag;
const { k } = this.config;

const classNameObj = {
    [`${k}-upload`]: true,
    [className]: className,
    [`${k}-drag`]: type === 'drag', 
    [`${k}-dragover`]: drag.dragOver.value, 
    [`${k}-gallery`]: type === 'gallery',
    [`${k}-disabled`]: disabled,
    [makeStyles(k)]: true,
};

const events = {
    'ev-click': this.selectFile,
};
if (type === 'drag') {
    events['ev-dragover'] = drag.stopEvent;
    events['ev-dragenter'] = drag.onDragEnter;
    events['ev-dragleave'] = drag.onDragLeave;
    events['ev-drop'] = drag.onDrop;
}

const handle = (
    <div class={`${k}-upload-handle`} {...events}>
        <b:content>
            <b:children v-if={children}>{children}</b:children>
            <template v-else-if={type !== 'gallery'}>
                <Button disabled={disabled} v-if={type === 'select'}>
                    <Icon class={`${k}-icon-upload`} />
                    {_$('点击上传')}
                </Button>
                <div class={`${k}-upload-area`} v-else>
                    <Icon class={`${k}-icon-add-bold`} />
                    <div innerHTML={_$('将文件拖到此处，或<a>点击上传</a>')}></div>
                </div>
            </template>
            <div v-else class={`${k}-upload-picture-card ${k}-upload-add`}>
                <Icon class={`${k}-icon-add-bold`} size="large" />
                <div>{_$('上传图片')}</div>
            </div>
        </b:content>
    </div>
);

const {removeFile} = this.files;
const closeBtn = (value, index) => (
    <Icon class={`${k}-upload-close ${k}-icon-delete`}
        ev-click={() => removeFile(value, index)}
        hoverable
    />
);

const {show, close, image, isShow} = this.showImage;

<div class={classNameObj} {...getRestProps(this)}>
    <input type="file" 
        accept={accept}
        class="c-hidden" 
        ref={this.inputRef}
        ev-change={this.onInputChange}
        multiple={multiple}
        directory={directory ? '' : undefined}
        webkitdirectory={directory ? '' : undefined}
    />

    <div v-if={type === 'gallery'} class={`${k}-upload-pictures`}>
        <TransitionGroup name="k-dropdown">
            <div
                class={{
                    [`${k}-upload-picture ${k}-upload-picture-card`]: true, 
                    [`${k}-error`]: $value.status === UploadFileStatus.Error,
                }}
                v-for={files}
                key={$value.uid}
            >
                <img class={`${k}-upload-img`} src={$value.url} />
                <Transition name="k-fade">
                    <div class={`${k}-upload-overlap`} key="overlap"
                        v-if={
                            $value.status === UploadFileStatus.Ready || 
                            $value.status === UploadFileStatus.Uploading
                        }
                    >
                        <Progress percent={$value.percent} size="mini"
                            class={`${k}-upload-progress`}
                        />
                    </div>
                    <div class={`${k}-upload-overlap ${k}-upload-icons`} v-else>
                        <Icon class={`${k}-upload-zoom ion-ios-eye-outline`} size="large"
                            hoverable
                            ev-click={() => show($value)}
                        />
                        {closeBtn($value, $key)}
                    </div>
                </Transition>
            </div>
            <div key="handle" class="c-middle" v-if={!limit || files.length < limit}>
                {handle}
            </div>
        </TransitionGroup>
    </div>
    <template v-else>{handle}</template>

    <div class={`${k}-upload-tip`} v-if={$blocks.tip}><b:tip /></div>

    <div class={`${k}-upload-files`} v-if={type !== 'gallery'}>
        <TransitionGroup {...expandAnimationCallbacks}>
            <div v-for={files} 
                class={{
                    [`${k}-upload-file`]: true,
                    [`${k}-error`]: $value.status === UploadFileStatus.Error
                }}
                key={$value.uid}
            >
                <div class={`${k}-upload-file-main`}>
                    <div class={`${k}-upload-name c-ellipsis`}>
                        <Icon class={`${k}-upload-file-icon ion-document`} />
                        <span class={`${k}-upload-file-name`}>
                            <Ellipsis>{$value.name}</Ellipsis>
                        </span>
                        <Icon class={`${k}-upload-status-icon ${k}-icon-success-fill`} 
                            v-if={$value.status === UploadFileStatus.Done}
                        />
                        <Icon class={`${k}-upload-status-icon ${k}-icon-error-fill`}
                            v-else-if={$value.status === UploadFileStatus.Error}
                        />
                    </div>
                    <Transition {...expandAnimationCallbacks}>
                        <Progress percent={$value.percent}
                            size="mini"
                            class={`${k}-upload-progress`}
                            v-if={
                                $value.status === UploadFileStatus.Ready || 
                                $value.status === UploadFileStatus.Uploading
                            }
                        />
                    </Transition>
                </div>
                {closeBtn($value, $key)}
            </div>
        </TransitionGroup>
    </div>

    <Dialog title={_$("查看图片")}
        key="dialog" 
        value={isShow.value}
        ev-close={close}
        class={{[`${k}-upload-dialog`]: true, [makeUploadDialogStyles(k)]: true}}
    >
        <a v-if={image.value} href={image.value.url} target="_blank">
            <img src={image.value.url} />
        </a>
    </Dialog>
</div>
