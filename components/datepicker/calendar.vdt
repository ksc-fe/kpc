import {Transition} from 'intact';
import {Button} from '../button';
import {Icon} from '../icon';
import {_$} from '../../i18n';
import {makeCalendarStyles} from './styles';
import {getNowDate} from './helpers';

const type = this.type.value;
const isYear = type === 'year';
const isWeek = type === 'week';
const isQuarter = type === 'quarter';
const isYearOrMonth = isYear || type === 'month';
const isDateOrDateTime = type === 'date' || type === 'datetime'
// isDateOrDateTime & isWeek合并
const showDateWeeks = isDateOrDateTime || isWeek
const { k } = this.config;
const classNameObj = {
    [`${k}-datepicker-calendar`]: true,
    [makeCalendarStyles(k)]: true,
};
const now = getNowDate();
const {focusDate, reset: resetFocusDate} = this.datepicker.focusDate;
const getItems = (data, onClick) => {
    return <div v-for={data}
        class={{
            [`${k}-calendar-item`]: true,
            [`${k}-exceed`]: $value.isExceed,
            [`${k}-active`]: $value.isActive,
            [`${k}-today`]: $value.isToday,
            [`${k}-disabled`]: $value.isDisabled, 
            [`${k}-hover`]: $value.isHover,
            [`${k}-in-range`]: $value.isInRange,
        }}
        ev-click={
            !$value.isDisabled ? e => {
                e._ignore = true;
                onClick($value.value);
            } : null
        }
        ev-mouseenter={() => focusDate.set($value.value)}
    >
        <div class={`${k}-value`}>{$value.label}</div>
    </div>
};

const {getDays, onClick: onClickDay} = this.days;
const {
    getDateLabel,
    prevMonth, nextMonth,
    prevYear, nextYear,
    prevTenYears, nextTenYears
} = this.showDate;

<div class={classNameObj}>
    <div class={`${k}-datepicker-month`}>
        <div class={`${k}-left-btns`}>
            <Button icon type="none" size="small" class={`${k}-prev`}
                tagName="div"
                ev-click={isYear ? prevTenYears : prevYear}
            >
                <Icon class={`${k}-icon-left`} size="small" />
                <Icon class={`${k}-icon-left`} size="small" />
            </Button>
            <Button icon type="none" size="small" class={`${k}-prev`}
                tagName="div"
                ev-click={prevMonth}
                v-if={showDateWeeks}
            >
                <Icon class={`${k}-icon-left`} size="small" />
            </Button>
        </div>
        <div class={`${k}-month-values`}>
            <template v-if={!isYear}>
                <span v-for={getDateLabel()}
                     class={`${k}-month-value`} 
                     ev-click={$value.onClick}
                >{$value.value}</span>
            </template>
            <span v-else class={`${k}-month-value`}>
                {this.years.getYearLabel()} 
            </span>
        </div>
        <div class={`${k}-right-btns`}>
            <Button icon type="none" size="small" class={`${k}-next`}
                tagName="div"
                ev-click={nextMonth}
                v-if={showDateWeeks}
            >
                <Icon class={`${k}-icon-right`} size="small" />
            </Button>
            <Button icon type="none" size="small" class={`${k}-next`}
                tagName="div"
                ev-click={isYear ? nextTenYears : nextYear}
            >
                <Icon class={`${k}-icon-right`} size="small" />
                <Icon class={`${k}-icon-right`} size="small" />
            </Button>
        </div>
    </div>
    <template v-if={showDateWeeks}>
        <div class={`${k}-weekdays`}>
            <div class={`${k}-weekday`}
                v-for={[_$('日'), _$('一'), _$('二'), _$('三'), _$('四'), _$('五'), _$('六')]}
            >{$value}</div>
        </div>
        <div v-if={isWeek} class={`${k}-weeks`} ev-mouseleave={resetFocusDate}>
            <div v-for={this.weeks.getWeeks(now)} class="week-row">
                <div class={`${k}-week-number`} ev-click={e => {onClickDay($value.days[0].value)}}
                    ev-mouseenter={() => focusDate.set($value.days[0].value)}>{$value.week}</div>
                {getItems($value.days, onClickDay)}
            </div>
        </div>
        <div v-else class={`${k}-days`} ev-mouseleave={resetFocusDate}>
            {getItems(getDays(now), onClickDay)}
        </div>
    </template>
    <div v-else class={`${k}-years`} ev-mouseleave={resetFocusDate}>
        {isYear ?
            getItems(this.years.getYears(now), this.years.onClick) :  
            isQuarter ?
                getItems(this.quarters.getQuarters(now), this.quarters.onClick) :
                getItems(this.months.getMonths(now), this.months.onClick)
        }
    </div>
</div>
