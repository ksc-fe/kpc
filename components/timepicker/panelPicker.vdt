import {Icon} from '../icon';
import {DropdownMenu} from '../dropdown';
import {makePanelStyles} from './styles';
import {DatepickerTime} from '../datepicker/time';
import {_$} from '../../i18n';
import {Button} from '../button';
import {PanelFlags} from '../datepicker/usePanel';
import {last} from '../datepicker/helpers';
import {ScrollSelect} from '../scrollSelect';
import { makeStyles as makeStylesInheritDatepicker } from '../datepicker/styles';

const {className, range, multiple, min, max} = this.get();
const {
    value: {value},
    onChangeTime,
    onChangeTimeByStep,
    getTimeValue,
    setMoment,
} = this.value;
const lastValue = last(value);
const { k } = this.config;
const { onConfirm } = this.confirm;

const classNameObj = {
    [`${k}-time-content`]: true,
    [`${k}-range`]: range,
    [className]: className,
    [makePanelStyles(k)]: true,
};
const options = this.step.options.value;
const {isDisabledTime, isDisabledTimeByStep, isDisabledConfirm} = this.disabled;
const {getValueFormat, getValueString} = this.formats;

const generatePanel = flag => {
    const timeValue = getTimeValue(flag); 
    return (
        <div class={`${k}-datepicker-calendar-wrapper`}>
            <div v-if={range} class={`${k}-timepicker-title`}>
                {flag === PanelFlags.Start ? _$('开始时间') : _$('结束时间')}
            </div>
            <DatepickerTime
                v-if={!options}
                value={timeValue}
                ev-$change:value={v => onChangeTime(v, flag)}
                format={getValueFormat()}
                flag={flag}
                isDisabledTime={isDisabledTime}
            />
            <div class={`${k}-datepicker-time`} v-else>
                <ScrollSelect
                    value={timeValue ? getValueString(timeValue) : timeValue}
                    ev-$change:value={v => onChangeTimeByStep(v, flag)}
                    data={options}
                    disable={v => isDisabledTimeByStep(v, flag)}
                />
            </div>
        </div>
    );
};

<t:super class={`${k}-timepicker ${makeStylesInheritDatepicker(k)}`}>
    <b:base-menu>
        <DropdownMenu class={classNameObj}>
            <div class={`${k}-datepicker-wrapper`}>
                <div class={`${k}-datepicker-calendars`}>
                    {generatePanel(PanelFlags.Start)}
                    {range ? generatePanel(PanelFlags.End) : null} 
                </div>
                <div class={`${k}-datepicker-footer`}>
                    <Button v-if={!range && !multiple && !max && !min} type="link" size="small"
                        ev-click={setMoment}
                    >{_$('此刻')}</Button>
                    <Button type="primary" size="small"
                        disabled={isDisabledConfirm()}
                        ev-click={onConfirm}
                    >{_$('确定')}</Button>
                </div>
            </div>
        </DropdownMenu>
    </b:base-menu>
    <b:suffix>
        <Icon class={`${k}-icon-time`} />
    </b:suffix>
</t:super>
